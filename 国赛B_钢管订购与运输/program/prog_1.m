clc, clear;

% 生成结点名字
Node_s = strcat('S', cellstr(int2str((1:7)')));
Node_a = strcat('A', strtrim(cellstr(int2str((1:15)'))));
Node_b = strcat('B', strtrim(cellstr(int2str((1:17)'))));

Node = [Node_s(:)', Node_a(:)', Node_b(:)'];

G = graph;
G = G.addnode(Node);

% 铁路图边
edge1 = {
    'B1', 'B3', 450; 'B2', 'B3', 80; 'B3', 'B5', 1150;
    'B5', 'B8', 1100; 'B4', 'B6', 306; 'B6', 'B7', 195;
    'B7', 'S1', 20; 'S1', 'B8', 202; 'B8', 'S2', 1200;
    'B8', 'B9', 720; 'B9', 'S3', 690; 'B9', 'B10', 520;
    'B10', 'B12', 170; 'B12', 'S4', 690; 'B12', 'B14', 160;
    'B12', 'B11', 88; 'B11', 'S5', 462; 'B14', 'B13', 70;
    'B14', 'B15', 320; 'B15', 'B16', 160; 'B16', 'S6', 70;
    'B16', 'B17', 290; 'B17', 'S7', 30;
    };

% 添加边到图中
G1 = G.addedge(edge1(:, 1), edge1(:, 2), cell2mat(edge1(:, 3)));
d1 = distances(G1);

% 将最短路转化为价格
c1 = inf * ones(size(d1));

beg = 20;
c1(d1 == 0) = 0;
c1(d1 > 0 & d1 <= 300) = beg;
c1(d1 > 300 & d1 <= 350) = beg * 1.15;
c1(d1 > 350 & d1 <= 400) = beg * 1.3;
c1(d1 > 400 & d1 <= 450) = beg * 1.45;
c1(d1 > 450 & d1 <= 500) = beg * 1.6;
c1(d1 > 500 & d1 <= 600) = beg * 1.85;
c1(d1 > 600 & d1 <= 700) = beg * 2.2;
c1(d1 > 700 & d1 <= 800) = beg * 2.5;
c1(d1 > 800 & d1 <= 900) = beg * 2.75;
c1(d1 > 900 & d1 <= 1000) = beg * 3;
idx = d1 > 1000 & d1 < inf;
c1(idx) = 60 + beg * 0.25 * ceil(d1(idx)/100 - 10);

% 公路图边
edge2 = {
    'A1', 'A2', 104; 'A2', 'B1', 3; 'A2', 'A3', 301; 'A3', 'B2', 2;
    'A3', 'A4', 750; 'A4', 'B5', 600; 'A4', 'A5', 606; 'A5', 'B4', 10;
    'A5', 'A6', 194; 'A6', 'B6', 5; 'A6', 'A7', 205; 'A7', 'B7', 10;
    'A7', 'S1', 31; 'A7', 'A8', 201; 'A8', 'B8', 12; 'A8', 'A9', 680;
    'A9', 'B9', 42; 'A9', 'A10', 480; 'A10', 'B10', 70; 'A10', 'A11', 300;
    'A11', 'B11', 10; 'A11', 'A12', 220; 'A12', 'B13', 10; 'A12', 'A13', 210;
    'A13', 'B15', 62; 'A13', 'A14', 420; 'A14', 'S6', 110; 'A14', 'B16', 30;
    'A14', 'A15', 500; 'A15', 'B17', 20; 'A15', 'S7', 20;
    };

% 添加边到图中
G2 = G.addedge(edge2(:, 1), edge2(:, 2), cell2mat(edge2(:, 3)));
% 生成邻接矩阵
c2 = full(adjacency(G2, 'weighted'));

w = [0.09, 0.092, 0.094, 0.096, 0.098, 0.1, 0.102, 0.104, 0.106, 0.108, 0.11];
c2 = c2 * w(6);
c2(c2 == 0) = inf;

% 生成整个图，边权为价格
c = min(c1, c2);
G3 = graph(c, Node);
% 求最短路
dist = distances(G3);
path = shortestpath(G3, "S6", 'A15');

% 将运输费用和采购费用合并
p = [144,	139.5,	139.5,	144,	139.5,	135,	144;
    147.2,	142.6,	142.6,	147.2,	142.6,	138,	147.2;
    150.4,	145.7,	145.7,	150.4,	145.7,	141,	150.4;
    153.6,	148.8,	148.8,	153.6,	148.8,	144,	153.6;
    156.8,	151.9,	151.9,	156.8,	151.9,	147,	156.8;
    160,	155,	155,	160,	155,	150,	160;
    163.2,	158.1,	158.1,	163.2,	158.1,	153,	163.2;
    166.4,	161.2,	161.2,	166.4,	161.2,	156,	166.4;
    169.6,	164.3,	164.3,	169.6,	164.3,	159,	169.6;
    172.8,	167.4,	167.4,	172.8,	167.4,	162,	172.8;
    176,	170.5,	170.5,	176,	170.5,	165,	176;

];
res = dist(1:7, 8:22) + p(6, :)';


% 写入文件
writematrix(res, 'Data.xlsx');



