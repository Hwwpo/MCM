clc, clear;

% 生成结点名字
Node_s = strcat('S', cellstr(int2str((1:7)')));
Node_a = strcat('A', strtrim(cellstr(int2str((1:21)'))));
Node_b = strcat('B', strtrim(cellstr(int2str((1:12)'))));

Node = [Node_s(:)', Node_a(:)', Node_b(:)'];

G = graph;
G = G.addnode(Node);

edge1 = {
    'B1', 'B2', 450; 'B2', 'B3', 80; 'B2', 'B4', 1150;
    'B4', 'B8', 1100; 'B5', 'B6', 306; 'B6', 'B7', 195;
    'B7', 'S1', 20; 'S1', 'B8', 202; 'B8', 'S2', 1200;
    'B8', 'A16', 720; 'A16', 'S3', 690; 'A16', 'B9', 520;
    'B9', 'B10', 170; 'B10', 'S4', 690; 'B10', 'A17', 88; 
    'A17', 'S5', 462; 'B10', 'A18', 160; 'A18', 'A19', 260;
    'A18', 'A20', 320; 'A20', 'B11', 160; 'B11', 'S6', 70;
    'B11', 'B12', 290; 'B12', 'S7', 30; 'B11', 'A21', 70;
    'A21', 'S6', 0;
    };

% 添加边到图中
G1 = G.addedge(edge1(:, 1), edge1(:, 2), cell2mat(edge1(:, 3)));
d1 = distances(G1);

% 将最短路转化为价格
c1 = inf * ones(size(d1));

c1(d1 == 0) = 0;
c1(d1 > 0 & d1 <= 300) = 20;
c1(d1 > 300 & d1 <= 350) = 23;
c1(d1 > 350 & d1 <= 400) = 26;
c1(d1 > 400 & d1 <= 450) = 29;
c1(d1 > 450 & d1 <= 500) = 32;
c1(d1 > 500 & d1 <= 600) = 37;
c1(d1 > 600 & d1 <= 700) = 44;
c1(d1 > 700 & d1 <= 800) = 50;
c1(d1 > 800 & d1 <= 900) = 55;
c1(d1 > 900 & d1 <= 1000) = 60;
idx = d1 > 1000 & d1 < inf;
c1(idx) = 60 + 5*ceil(d1(idx)/100 - 10);

% 公路图边
edge2 = {
    'A1', 'A2', 104; 'A2', 'B1', 3; 'A2', 'A3', 301; 'A3', 'B3', 2;
    'A3', 'A4', 750; 'A4', 'B4', 600; 'A4', 'A5', 606; 'A5', 'B5', 10;
    'A5', 'A6', 194; 'A6', 'B6', 5; 'A6', 'A7', 205; 'A7', 'B7', 10;
    'A7', 'S1', 31; 'A7', 'A8', 201; 'A8', 'B8', 12; 'A8', 'A9', 680;
    'A9', 'A16', 42; 'A9', 'A10', 480; 'A10', 'B9', 70; 'A10', 'A11', 300;
    'A11', 'A17', 10; 'A17', 'A18', 130; 'A17', 'A19', 190; 'A19', 'A20', 260;
    'A20', 'A21', 100; 'A20', 'S6', 100; 'A11', 'A12', 220; 'A12', 'A19', 10;
    'A12', 'A13', 210; 'A13', 'A20', 62; 'A13', 'A14', 420; 'A14', 'A21', 110;
    'A14', 'S6', 110; 'A14', 'B11', 30; 'A14', 'A15', 500; 'A15', 'B12', 20
    'A15', 'S7', 20; 'A21', 'S6', 0;
    };

% 添加边到图中
G2 = G.addedge(edge2(:, 1), edge2(:, 2), cell2mat(edge2(:, 3)));
% 生成邻接矩阵
c2 = full(adjacency(G2, 'weighted'));

c2 = c2 * 0.1;
c2(c2 == 0) = inf;

% 生成整个图，边权为价格
c = min(c1, c2);
G3 = graph(c, Node);
G3 = G3.addedge(6, 28, 0);

path = shortestpath(G3, "S6", 'A21')
% 求最短路
dist = distances(G3);

% 将运输费用和采购费用合并
p = [160; 155; 155; 160; 155; 150; 160];
res = dist(1:7, 8:28) + p;

% 写入文件
writematrix(res, 'Data_2.xlsx');